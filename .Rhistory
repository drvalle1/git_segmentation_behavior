plot(dat19$TA); abline(v=breakpt,col='red')
plot(dat19$DP); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
set.seed(1)
source('gibbs functions2.R')
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
View(dat1)
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
alpha=0.01
bern.a=bern.b=1
max.time=max(dat1$time1)
max.SL=max(dat1$SL, na.rm = T)
max.TA=max(dat1$TA, na.rm = T)
breakpt=mean(dat1$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat1$SL); abline(v=breakpt,col='red')
plot(dat1$TA); abline(v=breakpt,col='red')
plot(dat1$TAA); abline(v=breakpt,col='red')
breakpt
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
dat27<- dat %>% filter(id==27) %>% assign.bearing.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27$time1<- 1:nrow(dat27)
alpha=0.01
bern.a=bern.b=1
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27$time1<- 1:nrow(dat27)
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
foo<- diff(dat27$rel.angle)
foo
cor(foo)
cor(foo,foo[2:length(foo)])
cor(foo,c(foo[2:length(foo)],NA))
cor(foo,c(foo[2:length(foo)],NA), na.action=na.omit)
library(zoo)
require(zoo)
ts <- as.zoo(c(1,2,8,1,2,2,3,2,3,2,2,1,3,2,3,1,1,2))
n <- 3
ts_n <- lag(ts, k=-n, na.pad=T)
cor(ts[!is.na(ts_n)], ts_n[!is.na(ts_n)])
cor(ts[!is.na(ts_n)], ts_n[!is.na(ts_n)])^-1
acf(foo)
acf(foo, na.action = na.rm)
acf(foo, na.action = na.omit)
acf(foo, na.action = 'na.omit')
acf(foo, na.action = 'na.pass')
class(foo)
acfplot(foo)
plot(acf(foo, na.action = "na.pass")))
plot(acf(foo, na.action = "na.pass"))
plot(acf(foo, na.action = na.pass))
acf(foo, na.action = na.pass)
mean(dat27$dist_km)
mean(dat27$dist_km, na.rm = T)
source('gibbs functions2.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist" #change to generic form
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% chng.SL()
dat27$time1<- 1:nrow(dat27)
View(dat27)
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% chng.SL()
dat27$time1<- 1:nrow(dat27)
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move3(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
par(mfrow=c(4,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
plot(dat27$SLA); abline(v=breakpt,col='red')
par(mfrow=c(2,2))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
plot(dat27$SLA); abline(v=breakpt,col='red')
summary(dat27$SLA)
hist(dat27$SLA)
hist(dat27$TAA)
hist(dat27$TA)
hist(dat27$SL)
mean(dat27$dist)
mean(dat27$dist, na.rm = T)
median(dat27$dist, na.rm = T)
dat27$SLA
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% chng.SL()
dat27$time1<- 1:nrow(dat27)
hist(dat27$SLA)
summary(dat27$SLA)
dat27$SLA
foo<- dat27$dist-median(dat27$dist, na.rm = T)
foo
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% chng.SL()
dat27$time1<- 1:nrow(dat27)
dat27$SLA
hist(dat27$SLA)
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move3(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(2,2))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
plot(dat27$SLA); abline(v=breakpt,col='red')
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% chng.SL()
dat27$time1<- 1:nrow(dat27)
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move3(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
par(mfrow=c(2,2))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$TAA); abline(v=breakpt,col='red')
plot(dat27$SLA); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% assign.move.persist()
View(dat)
SL=dat27$dist-median(dat27$dist, na.rm = T)
summary(SL)
sign(SL[1]) == sign(SL[1+1])
sign(dat27$rel.angle[1]) == sign(dat27$rel.angle[1+1])
sign(SL[1]) == sign(SL[1+1]) & sign(dat27$rel.angle[1]) == sign(dat27$rel.angle[1+1])
sign(0)
sign(-1)
sign(-1.5)
sign(NA) == sign(5)
sign(0) == sign(5)
SL[is.na(SL)]
SL
summary(SL)
which(SL==NA)
which(is.na(SL))
SL[which(is.na(SL))]
SL[which(is.na(SL))]=0
SL[which(is.na(SL))]
summary(SL)
dat[which(is.na(dat$rel.angle)),"rel.angle"]
dat[which(is.na(dat$rel.angle)),"rel.angle"]=0
dat[which(is.na(dat$rel.angle)),"rel.angle"]
source('gibbs functions2.R')
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign() %>% assign.move.persist()
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% assign.move.persist()
dat27$time1<- 1:nrow(dat27)
alpha=0.01
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
max.MP=max(dat27$MP, na.rm = T)
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.MP=max.MP)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$MP); abline(v=breakpt,col='red')
Vp<- dat %>% (dist/dt)*cos(rel.angle)
dat %>% (dist/dt)
dat27 %>% (dist/dt)
dat27$dist/dat27$dt
dat27$dt
3600
dat27$dt/3600
Vp<- (dat27$dist/dat27$dt/3600)*cos(dat27$rel.angle)
Vp
Vp<- (dat27$dist/dat27$dt*1000)*cos(dat27$rel.angle)
Vp
(dat27$dist/dat27$dt*1000)
hist(Vp)
par(mfrow=c(1,1))
hist(Vp)
summary(Vp)
min(Vp)
min(Vp, na.rm = T)
View(dat1)
Vp2<- (dat1$dist_km/dat1$dt*1000)*cos(dat1$rel.angle)
hist(Vp)
hist(Vp2)
summary(Vp2)
direct.persist.lims=seq(from=min(Vp, na.rm = T), to=max(Vp, na.rm = T), length.out = 9)
direct.persist.lims
veloc.persist=function(dat) {  # create 8 bins
dist=dat$dist*1000  #from km to m
t.step=dat$dt
theta=dat$rel.angle
Vp<- (dist/t.step)*cos(theta)
veloc.persist.lims=seq(from=min(Vp, na.rm = T), to=max(Vp, na.rm = T), length.out = 9)
dat$Vp<- NA
for(i in 1:length(veloc.persist.lims)) {
tmp=which(Vp >= veloc.persist.lims[i] & Vp < veloc.persist.lims[i+1])
dat[tmp,"Vp"]=i
}
dat
}
foo<- dat27 %>% veloc.persist()
View(foo)
hist(foo$Vp)
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
View(dat27)
dat27$time1<- 1:nrow(dat27)
source('gibbs functions2.R')
alpha=0.01
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
max.Vp=max(dat27$Vp, na.rm = T)
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$Vp); abline(v=breakpt,col='red')
length(breakpt)
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
breakpt=mean(dat27$time1)
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
proc.time()
proc.time(for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$Vp); abline(v=breakpt,col='red')
write.csv(breakpt, "ID27 Breakpoints (Behavior).csv", row.names = F)
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
rm(foo)
View(dat27)
View(dat19)
View(dat12)
source('gibbs functions2.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist" #change to generic form
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
View(dat1)
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
alpha=0.01
max.time=max(dat19$time1)
max.SL=max(dat19$SL, na.rm = T)
max.TA=max(dat19$TA, na.rm = T)
max.Vp=max(dat19$Vp, na.rm = T)
breakpt=mean(dat19$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat19,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat19$SL); abline(v=breakpt,col='red')
plot(dat19$TA); abline(v=breakpt,col='red')
plot(dat19$TAA); abline(v=breakpt,col='red')
plot(dat19$Vp); abline(v=breakpt,col='red')
par(mfrow=c(3,1))
plot(dat19$SL); abline(v=breakpt,col='red')
plot(dat19$TA); abline(v=breakpt,col='red')
plot(dat19$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
write.csv(breakpt, "ID19 Breakpoints (Behavior).csv", row.names = F)
alpha=0.01
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
max.Vp=max(dat12$Vp, na.rm = T)
breakpt=mean(dat12$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat12$SL); abline(v=breakpt,col='red')
plot(dat12$TA); abline(v=breakpt,col='red')
plot(dat12$Vp); abline(v=breakpt,col='red')
write.csv(breakpt, "ID12 Breakpoints (Behavior).csv", row.names = F)
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
alpha=0.01
max.time=max(dat1$time1)
max.SL=max(dat1$SL, na.rm = T)
max.TA=max(dat1$TA, na.rm = T)
max.Vp=max(dat1$Vp, na.rm = T)
breakpt=mean(dat1$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat1$SL); abline(v=breakpt,col='red')
plot(dat1$TA); abline(v=breakpt,col='red')
plot(dat1$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
write.csv(breakpt, "ID1 Breakpoints (Behavior).csv", row.names = F)
