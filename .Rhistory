str(theta.estim.long)
theta.estim.long$behavior<- factor(theta.estim.long$behavior, levels = c("Resting","ARS","Transit"))
str(theta.estim.long)
#stacked area
ggplot(theta.estim.long) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~id, scales = "free_x")
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~id, scales = "free_x")
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = 1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~id, scales = "free_x")
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = 1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) + scale_x_continuous(expand = F) + scale_y_continuous(expand = F)
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) + scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0))
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggsave("Behavior area plot obs.png", width = 7, height = 5, units = "in", dpi = 300)
#Window of peak breeding (March 1 - June 30)
breed<- data.frame(xmin = as_datetime(c("2016-03-01 00:00:00","2017-03-01 00:00:00",
"2018-03-01 00:00:00","2019-03-01 00:00:00")),
xmax = as_datetime(c("2016-06-30 23:59:59","2017-06-30 23:59:59",
"2018-06-30 23:59:59","2019-06-30 23:59:59")),
ymin = -Inf, ymax = Inf)
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
View(theta.estim.long)
str(theta.estim.long)
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25)
View(theta.estim.long)
View(theta.estim.long)
#stacked area
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=date, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggsave("Behavior area plot time.png", width = 7, height = 5, units = "in", dpi = 300)
#Add cluster assignments to original data; one column for dominant behavior and another for prop/prob to use for alpha of points
dat2<- assign_behav(dat.list = dat.list, theta.estim2 = theta.estim2)
View(theta.estim2)
View(theta.estim2)
ncol(theta.estim2)
k<- ncol(theta.estim2)-4  # number of behaviors
3+k-1
#------------------------------------------------
assign_behav=function(dat.list, theta.estim2) {  #assign dominant behavior to observations
for (i in 1:length(dat.list)) {
tmp<- matrix(0, nrow(dat.list[[i]]), 2)
sub<- theta.estim2[theta.estim2$id == unique(dat.list[[i]]$id),]
for (j in 1:nrow(sub)) {
k<- ncol(theta.estim2)-4  # number of behaviors
ind<- which.max(sub[j,3:(3+k-1)])
tmp[j,1]<- names(ind) %>% as.character()
tmp[j,2]<- round(sub[j,(2+ind)], 3) %>% as.numeric()
}
colnames(tmp)<- c("behav","prop")
dat.list[[i]]<- cbind(dat.list[[i]], tmp)
dat.list[[i]]$behav<- dat.list[[i]]$behav %>% as.character()
dat.list[[i]]$prop<- dat.list[[i]]$prop %>% as.character()
}
#Convert to DF
dat2<- map_dfr(dat.list, `[`)
dat2$prop<- dat2$prop %>% as.numeric()
dat2
}
#Add cluster assignments to original data; one column for dominant behavior and another for prop/prob to use for alpha of points
dat2<- assign_behav(dat.list = dat.list, theta.estim2 = theta.estim2)
#load map data
usa <- ne_states(country = "United States of America", returnclass = "sf")
fl<- usa %>% filter(name == "Florida")
fl<- st_transform(fl, crs = "+init=epsg:32617") #change projection to UTM 17N
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-120000), max(dat$x+40000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat2 %>% filter(id==1), aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-120000), max(dat$x+40000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat2 %>% filter(id==1), aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-20000), max(dat$x+20000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat2 %>% filter(id==1), aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
setwd("~/Documents/Snail Kite Project/Data")
dat_full<- read.csv("Snail Kite Gridded Data_larger.csv", as.is = T)
dat1_full<- dat_full %>% filter(id==1)
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-20000), max(dat$x+20000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat1_full, aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat1_full, aes(x,y), color = "grey45", size = 2) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-20000), max(dat$x+20000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat1_full, aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat1_full, aes(x,y), color = "grey60", size = 2) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-20000), max(dat$x+20000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat1_full, aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat1_full, aes(x,y), color = "grey60", size = 2, alpha = 0.65) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggsave("Behavior map.png", width = 5, height = 7, units = "in", dpi = 300)
setwd("~/Documents/Snail Kite Project/Data/R Scripts/git_segmentation_behavior")
ggsave("Behavior map.png", width = 5, height = 7, units = "in", dpi = 300)
#Plot histograms of frequency data
ggplot(behav.res, aes(x = bin, y = count, fill = behav)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Frequency\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
facet_grid(param ~ behav, scales = "free_y")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_continuous(viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_continuous(values = viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
viridis(n=3)[c(2,1,3)]
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = viridis(n=3)) +
facet_grid(param ~ behav, scales = "fixed")
cols<-  viridis(n=3)[c(2,1,3)]
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = cols) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = behav)) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
# scale_fill_manual(values = viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
View(behav.res)
str(behav.res)
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = viridis(n=3)[c(2,1,3)]) +
facet_grid(param ~ behav, scales = "fixed")
#Plot histograms of proportion data
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
# scale_fill_viridis_c(guide = F, direction = -1) +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14), strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = viridis(n=3)[c(2,1,3)], guide = F) +
facet_grid(param ~ behav, scales = "fixed")
setwd("~/Documents/Snail Kite Project/Data/R Scripts/git_LDA_behavior")
ggsave("Behavior histogram facet.png", width = 7, height = 5, units = "in", dpi = 300)
str(dat2)
dat2$behav<- factor(dat2$behav, levels = c("Resting","ARS","Transit"))
ggplot() +
geom_sf(data = fl) +
coord_sf(xlim = c(min(dat$x-20000), max(dat$x+20000)),
ylim = c(min(dat$y-20000), max(dat$y+20000)), expand = FALSE) +
geom_path(data = dat1_full, aes(x=x, y=y), color="gray60", size=0.25) +
geom_point(data = dat1_full, aes(x,y), color = "grey60", size = 2, alpha = 0.65) +
geom_point(data = dat2 %>% filter(id==1), aes(x, y, fill=behav), size=2.5, pch=21, alpha=dat2[dat2$id==1,]$prop) +
scale_fill_viridis_d("Behavior", direction = -1) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
theme(axis.title = element_text(size = 16),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
guides(fill = guide_legend(label.theme = element_text(size = 12),
title.theme = element_text(size = 14)))
ggsave("Behavior map.png", width = 5, height = 7, units = "in", dpi = 300)
View(dat.res)
View(res)
View(theta.estim.long)
ggplot(theta.estim.long %>% filter(id==1)) +
geom_ribbon(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
test<- theta.estim.long %>% filter(id==1)
View(test)
test$ymax <-test$prop
test$ymin <- 0
zl <- levels(test$behavior)
for ( i in 2:length(zl) ) {
zi <- test$behavior==zl[i]
zi_1 <- test$behavior==zl[i-1]
test$ymin[zi] <- test$ymax[zi_1]
test$ymax[zi] <- test$ymin[zi] + test$ymax[zi]
}
ggplot(test) +
geom_ribbon(aes(x=time1, ymin=ymin, ymax=ymax, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggplot(theta.estim.long %>% filter(id==1)) +
geom_area(aes(x=time1, y=prop, fill = behavior), color = "black", size = 0.25,
position = "fill") +
labs(x = "\nObservation", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank()) +
facet_wrap(~id, scales = "free_x")
View(test)
ggplot(test) +
geom_ribbon(aes(x=date, ymin=ymin, ymax=ymax, fill = behavior), color = "black", size = 0.25) +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggplot(test) +
geom_ribbon(aes(x=date, ymin=ymin, ymax=ymax, fill = behavior), color = "black", size = 0.25,
position = "fill") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
GeomRibbon$handle_na <- function(data, params) { data }
ggplot(test) +
geom_ribbon_na(aes(x=date, y=prop, fill = behavior), color = "black", size = 0.25,
position = "stack") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggplot(test) +
geom_ribbon(aes(x=date, ymin=ymin, ymax=ymax, fill = behavior), color = "black", size = 0.25,
position = "fill") +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
ggplot(test) +
geom_ribbon(aes(x=date, ymin=ymin, ymax=ymax, fill = behavior), color = "black", size = 0.25) +
geom_rect(data = breed, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
fill = "grey", alpha = 0.25) +
labs(x = "\nTime", y = "State Probability\n") +
scale_fill_viridis_d("Behavior", direction = -1) +
theme_bw() +
theme(axis.title = element_text(size = 16), axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14, face = "bold"),
panel.grid = element_blank())
