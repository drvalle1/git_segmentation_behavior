TA[i,dat1$TA[i]]=1
}
image(TA); abline(v=breakpt/nrow(dat1),col='blue')
View(TA)
colSums(TA)
unique(dat1$TA)
unique(!is.na(dat1)$TA)
unique(dat1[!is.na(dat1$TA),])
unique(dat1[!is.na(dat1$TA),"TA"])
TA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TA),"TA"]))
for (i in 1:nrow(dat1)){
TA[i,dat1$TA[i]]=1
}
TAA<- matrix(0, nrow(dat1), length(unique(dat1$TAA)))
for (i in 1:nrow(dat1)){
TAA[i,dat1$TAA[i]]=1
}
image(SL); abline(v=breakpt/nrow(dat1),col='blue')
TA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TA),"TA"])))
for (i in 1:nrow(dat1)){
TA[i,dat1$TA[i]]=1
}
image(TA); abline(v=breakpt/nrow(dat1),col='blue')
unique(dat1$TAA)
unique(dat1[!is.na(dat1$TAA),"TAA"])
TAA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TAA),"TAA"])))
for (i in 1:nrow(dat1)){
TAA[i,dat1$TAA[i]]=1
}
View(TAA)
dat1$TAA[1]
dat1$TAA[2]
dat1$TAA[3]
TAA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TAA),"TAA"])))
for (i in 1:nrow(dat1)){
TAA[i,dat1$TAA[i]+1]=1
}
image(TAA); abline(v=breakpt/nrow(dat1),col='blue')
behav.seg.image=function(dat) {
SL<- matrix(0, nrow(dat1), length(unique(dat1$SL)))
for (i in 1:nrow(dat1)){
SL[i,dat1$SL[i]]=1
}
TA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TA),"TA"])))
for (i in 1:nrow(dat1)){
TA[i,dat1$TA[i]]=1
}
TAA<- matrix(0, nrow(dat1), length(unique(dat1[!is.na(dat1$TAA),"TAA"])))
for (i in 1:nrow(dat1)){
TAA[i,dat1$TAA[i]+1]=1
}
behav.list<- list(SL,TA,TAA)
}
behav.seg.image=function(dat) {
SL<- matrix(0, nrow(dat), length(unique(dat$SL)))
for (i in 1:nrow(dat)){
SL[i,dat$SL[i]]=1
}
TA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TA),"TA"])))
for (i in 1:nrow(dat)){
TA[i,dat$TA[i]]=1
}
TAA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TAA),"TAA"])))
for (i in 1:nrow(dat)){
TAA[i,dat$TAA[i]+1]=1
}
behav.list<- list(SL,TA,TAA)
}
test<- behav.seg.image(dat1)
image(test[1]); abline(v=breakpt/nrow(dat1),col='blue')
test[1]
behav.seg.image=function(dat) {
SL<- matrix(0, nrow(dat), length(unique(dat$SL)))
for (i in 1:nrow(dat)){
SL[i,dat$SL[i]]=1
}
TA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TA),"TA"])))
for (i in 1:nrow(dat)){
TA[i,dat$TA[i]]=1
}
TAA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TAA),"TAA"])))
for (i in 1:nrow(dat)){
TAA[i,dat$TAA[i]+1]=1
}
behav.list<- list(SL=SL,TA=TA,TAA=TAA)
}
test[1]
test[[1]]
names(test)
behav.seg.image=function(dat) {
SL<- matrix(0, nrow(dat), length(unique(dat$SL)))
for (i in 1:nrow(dat)){
SL[i,dat$SL[i]]=1
}
TA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TA),"TA"])))
for (i in 1:nrow(dat)){
TA[i,dat$TA[i]]=1
}
TAA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TAA),"TAA"])))
for (i in 1:nrow(dat)){
TAA[i,dat$TAA[i]+1]=1
}
behav.list<- list(SL,TA,TAA)
names(behav.list)<- c("SL","TA","TAA")
}
test<- behav.seg.image(dat1)
test
behav.list[1]
behav.list<- list(SL,TA,TAA)
names(behav.list)
names(behav.list[1])
names(behav.list[1])
names(behav.list[1])<- "SL"
behav.list<- list(sl=SL,ta=TA,taa=TAA)
behav.list<- list(SL=SL,TA=TA,TAA=TAA)
behav.list
behav.list$SL
behav.seg.image=function(dat) {
SL<- matrix(0, nrow(dat), length(unique(dat$SL)))
for (i in 1:nrow(dat)){
SL[i,dat$SL[i]]=1
}
TA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TA),"TA"])))
for (i in 1:nrow(dat)){
TA[i,dat$TA[i]]=1
}
TAA<- matrix(0, nrow(dat), length(unique(dat[!is.na(dat$TAA),"TAA"])))
for (i in 1:nrow(dat)){
TAA[i,dat$TAA[i]+1]=1
}
behav.list<- list(SL=SL,TA=TA,TAA=TAA)
behav.list
}
behav.list<- behav.seg.image(dat1)
image(behav.list$SL); abline(v=breakpt/nrow(dat1),col='blue')
par(mfrow=c(3,1))
plot(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='red')
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='red')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='red')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='red')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
plot(dat1$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat1$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat1$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
#discretize step length, turning angle, and turning angle autocorr by ID
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(x="ID 1 (n=5)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL")
abline(v=breakpt/nrow(dat1),col='blue')
title(x="ID 1 (n=5)")
image(behav.list$SL, xlab = "", ylab = "SL")
title(x="ID 1 (n=5)")
title(x="ID 1 (n=5)")
par(mfrow=c(3,1))
title(x="ID 1 (n=5)")
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue');
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main = ="ID 1 (n=5)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main="ID 1 (n=5)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat1$time1)
max.SL=max(dat1$SL, na.rm = T)
max.TA=max(dat1$TA, na.rm = T)
#starting values
breakpt=mean(dat1$time1)
#number of iterations
ngibbs=20000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
350/60
length(breakpt)
par(mfrow=c(3,1))
plot(dat1$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat1$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat1$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main="ID 1 (n=5)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
behav.list<- behav.seg.image(dat1)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main="ID 1 (n=5)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
write.csv(breakpt, "ID1 Breakpoints (Behavior).csv", row.names = F)
par(mfrow=c(3,1))
plot(dat1$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat1$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat1$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
plot(dat1$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red'); title(main="ID 1 (n=5)")
plot(dat1$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat1$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
png("ID 1 behav seg plot.png", width = 8, height = 6, units = "in", res = 400)
par(mfrow=c(3,1))
plot(dat1$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red'); title(main="ID 1 (n=7)")
plot(dat1$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat1$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
dev.off()
png("ID 1 behav seg image.png", width = 8, height = 6, units = "in", res = 400)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main="ID 1 (n=7)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
dev.off()
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
dat.list<- dat1,dat12,dat19,dat27
dat.list<- list(dat1,dat12,dat19,dat27)
head(dat.list[1])
dat.list<- list(dat1=dat1,dat12=dat12,dat19=dat19,dat27=dat27)
dat.list[1]
length(dat.list)
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
#starting values
breakpt=mean(dat12$time1)
#number of iterations
ngibbs=10000
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
151/60
length(breakpt)
par(mfrow=c(3,1))
plot(dat12$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat12$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat12$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
write.csv(breakpt, "ID12 Breakpoints (Behavior).csv", row.names = F
)
behav.list<- behav.seg.image(dat12)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat1),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat1),col='blue')
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat12),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat12),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat12),col='blue')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat12),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat12),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat12),col='blue')
png("ID 12 behav seg plot.png", width = 8, height = 6, units = "in", res = 400)
par(mfrow=c(3,1))
plot(dat12$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat12$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat12$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
dev.off()
png("ID 12 behav seg image.png", width = 8, height = 6, units = "in", res = 400)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat12),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat12),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat12),col='blue')
dev.off()
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat19$time1)
max.SL=max(dat19$SL, na.rm = T)
max.TA=max(dat19$TA, na.rm = T)
#starting values
breakpt=mean(dat19$time1)
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat19,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat19$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat19$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat19$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat27$time1)
max.SL=max(dat27$SL, na.rm = T)
max.TA=max(dat27$TA, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat27$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat27$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
dat1<- dat %>% filter(id==1) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat12<- dat %>% filter(id==12) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat19<- dat %>% filter(id==19) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat27<- dat %>% filter(id==27) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
View(dat12)
View(dat1)
dat1<- dat1 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat12 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat19 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat27 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
rm(list=ls(all=TRUE))
set.seed(1)
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
#discretize step length, turning angle, and turning angle autocorr by ID
#only subset obs w/ 1 hr time step; removal of 5815 total obs
dat1<- dat %>% filter(id==1) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat12<- dat %>% filter(id==12) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat19<- dat %>% filter(id==19) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat27<- dat %>% filter(id==27) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat1<- dat1 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat12 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat19 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat27 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
source('gibbs functions2.R')
source('helper functions.R')
dat1<- dat1 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat12 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat19 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat27 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
alpha=0.01
bern.a=bern.b=1
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
breakpt=mean(dat12$time1)
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
par(mfrow=c(3,1))
plot(dat12$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat12$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat12$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
dat12<- dat %>% filter(id==12) %>% mutate(time1 = 1:nrow(.))
dat12<- dat12 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
#starting values
breakpt=mean(dat12$time1)
#number of iterations
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
par(mfrow=c(3,1))
plot(dat12$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat12$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat12$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
#breakpts
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
#discretize step length, turning angle, and turning angle autocorr by ID
#only subset obs w/ 1 hr time step; removal of 5815 total obs
dat1<- dat %>% filter(id==1) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat12<- dat %>% filter(id==12) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat19<- dat %>% filter(id==19) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat27<- dat %>% filter(id==27) %>% mutate(obs = 1:nrow(.)) %>% filter(dt==3600) %>% mutate(time1 = 1:nrow(.))
dat1<- dat1 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat12<- dat12 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat19<- dat19 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
dat27<- dat27 %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% chng.rel_angle.sign()
alpha=0.01
bern.a=bern.b=1
#useful stuff
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
#starting values
breakpt=mean(dat12$time1)
ngibbs=40000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,bern.a=bern.a,bern.b=bern.b,
max.SL=max.SL,max.TA=max.TA)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
325/60
par(mfrow=c(3,1))
plot(dat12$SL, xlab = "", ylab = "SL"); abline(v=breakpt,col='red')
plot(dat12$TA, xlab = "", ylab = "TA"); abline(v=breakpt,col='red')
plot(dat12$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt,col='red')
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat12),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat12),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat12),col='blue')
behav.list<- behav.seg.image(dat12)
par(mfrow=c(3,1))
image(behav.list$SL, xlab = "", ylab = "SL"); abline(v=breakpt/nrow(dat12),col='blue'); title(main="ID 12 (n=1)")
image(behav.list$TA, xlab = "", ylab = "TA"); abline(v=breakpt/nrow(dat12),col='blue')
image(behav.list$TAA, xlab = "Time", ylab = "TAA"); abline(v=breakpt/nrow(dat12),col='blue')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
