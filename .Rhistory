tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
length(dat.list)
length(dt.bins)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval", "N")
View(dt.tab)
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
dt.bins<- c(seq(0,9000,by=600), Inf)
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
dat.out$`1`
dat.out$`12`
dat.out$`19`
dat.out$`27`
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
library(dplyr)
library(adehabitatLT)
library(knitr)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval", "N")
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
dt.bins<- c(seq(0,9000,by=600), Inf)
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
kable(dat.out$`1`)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
library(dplyr)
library(adehabitatLT)
library(knitr)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval", "N")
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
dt.bins<- c(seq(0,9000,by=600), Inf)
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
kable(dat.out$`1`)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
library(dplyr)
library(adehabitatLT)
library(knitr)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval", "N")
dt.bins<- c(seq(0,9000,by=600), Inf)
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
kable(dat.out$`1`)
kable(dat.out$`1`)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
library(dplyr)
library(adehabitatLT)
library(knitr)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.bins<- c(seq(0,9000,by=600), Inf)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval", "N")
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60,"min")
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
kable(dat.out$`1`)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
coords<- dat[c("utmlong","utmlat")]
dat.spdf<- SpatialPointsDataFrame(coords = coords, data = dat)
proj4string(dat.spdf)<- CRS("+init=epsg:32617")
dat.traj<- as.ltraj(xy = coordinates(dat.spdf), date = dat.spdf$ESTtime, id = dat.spdf$id)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
coords<- dat[c("utmlong","utmlat")]
dat.spdf<- SpatialPointsDataFrame(coords = coords, data = dat)
proj4string(dat.spdf)<- CRS("+init=epsg:32617")
dat.traj<- as.ltraj(xy = coordinates(dat.spdf), date = dat.spdf$ESTtime, id = dat.spdf$id)
library(dplyr)
library(adehabitatLT)
library(knitr)
library(lubridate)
setwd("/Users/joshcullen/Documents/Snail Kite Project/Data")
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ',')
dat$ESTtime<- as_datetime(dat$ESTtime)
consol.data=function(dat) {  #create list by ID
id<- unique(dat$id)
n=length(id)
dat.list<- vector("list", n)
names(dat.list)<- id
for (i in 1:length(id)) {
dat.list[[i]]<- dat[dat$id==id[i],]
}
dat.list
}
dat.list<- consol.data(dat)
dat.out<- vector("list", length(unique(dat$id)))
names(dat.out)<- unique(dat$id)
dt.bins<- c(seq(0,9000,by=600), Inf)
dt.tab<- matrix(NA, length(dt.bins)-1, 2)
colnames(dt.tab)<- c("Interval (min)", "N")
for (i in 1:length(dat.list)) {
id=dat.list[[i]]
for (j in 1:length(dt.bins)-1) {
tmp=which(dat$dt >= dt.bins[j] & dat$dt < dt.bins[j+1])
dt.tab[j,1]=paste(dt.bins[j]/60,"-",dt.bins[j+1]/60)
dt.tab[j,2]=length(tmp)
}
dat.out[[i]]=dt.tab
}
coords<- dat[c("utmlong","utmlat")]
dat.spdf<- SpatialPointsDataFrame(coords = coords, data = dat)
proj4string(dat.spdf)<- CRS("+init=epsg:32617")
dat.traj<- as.ltraj(xy = coordinates(dat.spdf), date = dat.spdf$ESTtime, id = dat.spdf$id)
grtr.1d <- function(dt) {  #cut traj when gap larger than 1 day
return(dt > (1*3600*24))
}
dat.traj2<- cutltraj(dat.traj, "grtr.1d(dt)", nextr = TRUE)
dat.traj2
dat.new<- dat[,1:4] #save data for IDs, coords, and dates
dat.traj.df<- ld(dat.traj2) #turn ltraj object into DF
dat.new<- cbind(dat.new, dat.traj.df[,c(4:10,12)])
plotltr(dat.traj2[c(1)], "dt/3600")  #can see that mainly 2 h dt in 1st burst, with gaps due to night interval and occasional 1 h dt, which changes permanently to 1 h dt
plotltr(dat.traj2[c(2)], "dt/3600")
plotltr(dat.traj2[c(3)], "dt/3600")
plotltr(dat.traj2[c(1)], "dt/3600", ylab="Hours")
plotltr(dat.traj2[c(1)], "dt/3600")
?plot
plotltr(dat.traj2[c(1)], "dt/3600", main="ID1")
plotltr(dat.traj2[c(1)], "dt/3600", ylab="Hour")
plotltr(dat.traj2[c(1)], "dt/3600", ylab="")
plotltr(dat.traj2[c(1)], which = "dt/3600", ylab="")
dat.new %>% filter(burst==1.1) %>% nrow()
plotltr(dat.traj2[c(1)], "dt/3600")
plotltr(dat.traj2[c(1)], "dt/3600")
plotltr(dat.traj2[c(2)], "dt/3600")
plotltr(dat.traj2[c(3)], "dt/3600")
dat.new %>% filter(burst==1.3) %>% nrow()
library(devtools)
install_github("JesJehle/earthEngineGrabR")
library(earthEngineGrabR)
ee_grab_install()
ee_grab_install()
Y
Sys.which("python")
library(earthEngineGrabR)
ee_grab_install()
library(reticulate)
use_python("/usr/bin/python")
ee_grab_install()
use_virtualenv("~/myenv")
use_condaenv("myenv")
use_condaenv(condaenv = "r-nlp", conda = "/opt/anaconda3/bin/conda")
Sys.which("python")
ee_grab_install()
system('. /home/joshcullen/conda/etc/profile.d/conda.sh')
setwd("~/Documents/Snail Kite Project/Data")
getwd()
use_python("/usr/bin/python")
use_virtualenv(getwd())
use_condaenv("Data")
py_config()
py_install()
Sys.which("python")
ee_grab_install()
use_python("/usr/bin/python")
use_condaenv("Data")
library(reticulate)
Sys.which("python")
ee_grab_install()
py_config()
conda_list()
library(earthEngineGrabR)
ee_grab_install()
Sys.which("python")
use_python("/usr/bin/python")
py_config()
use_virtualenv("~/usr/local/bin/python3")
use_condaenv("python3")
use_condaenv(condaenv = "r-nlp", conda = "/opt/anaconda3/bin/conda")
ee_grab_install()
use_python("/usr/local/bin/python3")
py_config()
library(devtools)
devtools::install_github("rstudio/reticulate")
library(reticulate)
py_config()
library(earthEngineGrabR)
ee_grab_install()
py_discover_config()
use_virtualenv("/Users/joshcullen/.virtualenvs/r-reticulate/bin/python")
use_condaenv("python")
use_virtualenv("/Users/joshcullen/.virtualenvs/r-reticulate/bin")
use_condaenv("python")
library(dplyr)
library(lubridate)
source('helper functions.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
class(dat$ESTtime)
dat$ESTtime<- date(dat$ESTtime)
class(dat$ESTtime)
head(dat$ESTtime)
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
dat$ESTtime<- as_datetime(dat$ESTtime)
View(dat)
dat$date<- date(dat$ESTtime)
behav.list<- behav.prep(dat=dat, tstep = 3600)  #add move params and filter by 3600 s interval
library(ggplot2)
ggplot2(behav.list$`1`[1:100,]) +
geom_point(size=2) +
facet_wrap(~date)
ggplot(behav.list$`1`[1:100,]) +
geom_point(size=2) +
facet_wrap(~date)
ggplot(behav.list$`1`[1:100,]) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date)
ggplot(behav.list$`1`[1:100,]) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free")
ggplot(behav.list$`1`[1:30,]) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free")
ggplot(behav.list$`1`[1:30,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free")
behav.list$`1`[1:30,]
View(behav.list)
View(behav.list[["1"]])
behav.list$`1`[1:50,]
View(behav.list)
View(behav.list[["1"]])
ggplot(behav.list$`1`[1:50,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`1`[1:70,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:30,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:50,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`1`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`1`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
View(behav.list[["12"]])
ggplot(behav.list$`12`[1:77,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:77,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
View(behav.list[["19"]])
ggplot(behav.list$`19`[1:81,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:81,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:69,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:69,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`27`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`27`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
format(Sys.time(), '%d %B %Y')
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
ggplot(behav.list$`1`[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`12`[1:77,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:69,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
ggplot(behav.list$`19`[1:69,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank())
ggplot(behav.list$`27`[1:70,]) +
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "fixed") +
theme(axis.text = element_blank())
options(warn = -1)
View(behav.list)
View(behav.list[["1"]])
ggplot(dat1[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank()) +
labs(title = "ID 1")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(lubridate)
source('helper functions.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist"  #change to generic form
dat$ESTtime<- as_datetime(dat$ESTtime)
dat$date<- date(dat$ESTtime)
behav.list<- behav.prep(dat=dat, tstep = 3600)  #add move params and filter by 3600 s interval
dat1<- behav.list$`1`
dat1$acf<- rep(1:4, each=nrow(dat1)/4)
lag.max=50
par(mfrow=c(2,2))
for (i in 1:4) {
tmp<- dat1 %>% filter(acf==i) %>% select(SL)
acf(tmp, lag.max = lag.max, main=paste("SL: Section",i))
}
lag.max=nrow(dat1)/4
par(mfrow=c(2,2))
for (i in 1:4) {
tmp<- dat1 %>% filter(acf==i) %>% select(SL)
acf(tmp, lag.max = lag.max, main=paste("SL: Section",i))
}
lag.max=50
par(mfrow=c(2,2))
for (i in 1:4) {
tmp<- dat1 %>% filter(acf==i) %>% select(TA)
acf(tmp, lag.max = lag.max, main=paste("TA: Section",i), na.action = na.pass)
}
lag.max=nrow(dat1)/4
par(mfrow=c(2,2))
for (i in 1:4) {
tmp<- dat1 %>% filter(acf==i) %>% select(TA)
acf(tmp, lag.max = lag.max, main=paste("TA: Section",i), na.action = na.pass)
}
ggplot(dat1[1:70,]) +  #48 days betweeb multi-observation days for ID 1
geom_path(aes(utmlong, utmlat)) +
geom_point(aes(utmlong, utmlat), size=2) +
facet_wrap(~date, scales = "free") +
theme(axis.text = element_blank()) +
labs(title = "ID 1")
library(dplyr)
library(purrr)
source('gibbs functions2.R')
source('helper functions.R')
source('gibbs sampler2.R')
library(dplyr)
library(ggplot2)
library(lubridate)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(sp)
library(raster)
library(rgdal)
dat<- read.csv("Modified Snail Kite Data_large.csv", header = T, sep = ",")
