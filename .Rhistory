plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat27$SL); abline(v=breakpt,col='red')
plot(dat27$TA); abline(v=breakpt,col='red')
plot(dat27$Vp); abline(v=breakpt,col='red')
write.csv(breakpt, "ID27 Breakpoints (Behavior).csv", row.names = F)
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
rm(foo)
View(dat27)
View(dat19)
View(dat12)
source('gibbs functions2.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist" #change to generic form
dat1<- dat %>% filter(id==1) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat12<- dat %>% filter(id==12) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat19<- dat %>% filter(id==19) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
dat27<- dat %>% filter(id==27) %>% assign.rel_angle.bin() %>% assign.dist.bin() %>% veloc.persist()
View(dat1)
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
alpha=0.01
max.time=max(dat19$time1)
max.SL=max(dat19$SL, na.rm = T)
max.TA=max(dat19$TA, na.rm = T)
max.Vp=max(dat19$Vp, na.rm = T)
breakpt=mean(dat19$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat19,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(3,1))
plot(dat19$SL); abline(v=breakpt,col='red')
plot(dat19$TA); abline(v=breakpt,col='red')
plot(dat19$TAA); abline(v=breakpt,col='red')
plot(dat19$Vp); abline(v=breakpt,col='red')
par(mfrow=c(3,1))
plot(dat19$SL); abline(v=breakpt,col='red')
plot(dat19$TA); abline(v=breakpt,col='red')
plot(dat19$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
write.csv(breakpt, "ID19 Breakpoints (Behavior).csv", row.names = F)
alpha=0.01
max.time=max(dat12$time1)
max.SL=max(dat12$SL, na.rm = T)
max.TA=max(dat12$TA, na.rm = T)
max.Vp=max(dat12$Vp, na.rm = T)
breakpt=mean(dat12$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat12$SL); abline(v=breakpt,col='red')
plot(dat12$TA); abline(v=breakpt,col='red')
plot(dat12$Vp); abline(v=breakpt,col='red')
write.csv(breakpt, "ID12 Breakpoints (Behavior).csv", row.names = F)
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
alpha=0.01
max.time=max(dat1$time1)
max.SL=max(dat1$SL, na.rm = T)
max.TA=max(dat1$TA, na.rm = T)
max.Vp=max(dat1$Vp, na.rm = T)
breakpt=mean(dat1$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
for (i in 1:ngibbs){
print(i)
vals=samp.move2(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.SL=max.SL,max.TA=max.TA,max.Vp=max.Vp)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
}
length(breakpt)
par(mfrow=c(3,1))
plot(dat1$SL); abline(v=breakpt,col='red')
plot(dat1$TA); abline(v=breakpt,col='red')
plot(dat1$Vp); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
write.csv(breakpt, "ID1 Breakpoints (Behavior).csv", row.names = F)
library(ggplot2)
library(dplyr)
library(coda)
set.seed(1)
source('gibbs functions2.R')
source('gibbs functions3.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
View(dat)
names(dat)[7]<- "dist" #change to generic form
dat1<- dat %>% filter(id==1) %>% veloc.persist() %>% veloc.turn
dat12<- dat %>% filter(id==12) %>% veloc.persist() %>% veloc.turn()
dat19<- dat %>% filter(id==19) %>% veloc.persist() %>% veloc.turn()
dat27<- dat %>% filter(id==27) %>% veloc.persist() %>% veloc.turn()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
View(dat1)
hist(dat1$Vp)
hist(dat1$Vt)
alpha=0.01
max.time=max(dat1$time1)
max.Vp=max(dat1$Vp, na.rm = T)
max.Vt=max(dat1$Vt, na.rm = T)
breakpt=mean(dat1$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
source('gibbs functions3.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist" #change to generic form
dat1<- dat %>% filter(id==1) %>% veloc.persist() %>% veloc.turn
dat12<- dat %>% filter(id==12) %>% veloc.persist() %>% veloc.turn()
dat19<- dat %>% filter(id==19) %>% veloc.persist() %>% veloc.turn()
dat27<- dat %>% filter(id==27) %>% veloc.persist() %>% veloc.turn()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
alpha=0.01
#useful stuff
max.time=max(dat1$time1)
max.Vp=max(dat1$Vp, na.rm = T)
max.Vt=max(dat1$Vt, na.rm = T)
#starting values
breakpt=mean(dat1$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
View(dat1)
breakpt1=c(0,breakpt,Inf)
n=length(breakpt1)
res.Vp=matrix(0,n-1,max.Vp)
res.Vt=matrix(0,n-1,max.Vt)
plot(dat1$Vp)
plot(dat1$Vt)
dat<- dat1
dist=dat$dist*1000  #from km to m
t.step=dat$dt
theta=dat$abs.angle
Vp<- (dist/t.step)*cos(theta)
veloc.persist.lims=seq(from=min(Vp, na.rm = T), to=max(Vp, na.rm = T), length.out = 9)
veloc.persist.lims
dat$Vp<- NA
length(veloc.persist.lims)
for(i in 1:length(veloc.persist.lims)) {
tmp=which(Vp >= veloc.persist.lims[i] & Vp < veloc.persist.lims[i+1])
dat[tmp,"Vp"]=i
}
View(dat)
unique(dat$Vp)
plot(Vp)
max(Vp, na.rm = T)
which(Vp >= veloc.persist.lims[8] & Vp < veloc.persist.lims[8+1])
tmp=which(Vp == veloc.persist.lims[9])
veloc.persist=function(dat) {  #persistence velocity via Gurarie et al 2009; create 8 bins
dist=dat$dist*1000  #from km to m
t.step=dat$dt
theta=dat$abs.angle
Vp<- (dist/t.step)*cos(theta)
veloc.persist.lims=seq(from=min(Vp, na.rm = T), to=max(Vp, na.rm = T), length.out = 9)
dat$Vp<- NA
for(i in 1:length(veloc.persist.lims)) {
tmp=which(Vp >= veloc.persist.lims[i] & Vp < veloc.persist.lims[i+1])
dat[tmp,"Vp"]=i
}
tmp=which(Vp == veloc.persist.lims[9])
dat[tmp,"Vp"]=9
dat
}
dat<- veloc.persist(dat)
plot(dat$Vp)
source('gibbs functions3.R')
dat<- read.csv("Snail Kite Gridded Data.csv", header = T, sep = ",")
names(dat)[7]<- "dist" #change to generic form
#discretize step length, turning angle, and turning angle autocorr by ID
dat1<- dat %>% filter(id==1) %>% veloc.persist() %>% veloc.turn
dat12<- dat %>% filter(id==12) %>% veloc.persist() %>% veloc.turn()
dat19<- dat %>% filter(id==19) %>% veloc.persist() %>% veloc.turn()
dat27<- dat %>% filter(id==27) %>% veloc.persist() %>% veloc.turn()
dat1$time1<- 1:nrow(dat1)
dat12$time1<- 1:nrow(dat12)
dat19$time1<- 1:nrow(dat19)
dat27$time1<- 1:nrow(dat27)
View(dat1)
par(mfrow=c(2,1))
plot(dat1$Vp)
plot(dat1$Vt)
alpha=0.01
#useful stuff
max.time=max(dat1$time1)
max.Vp=max(dat1$Vp, na.rm = T)
max.Vt=max(dat1$Vt, na.rm = T)
#starting values
breakpt=mean(dat1$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
287/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat1$Vp); abline(v=breakpt,col='red')
plot(dat1$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
alpha=0.01
max.Vp=max(dat12$Vp, na.rm = T)
max.Vt=max(dat12$Vt, na.rm = T)
breakpt=mean(dat12$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
238/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat12$Vp); abline(v=breakpt,col='red')
plot(dat12$Vt); abline(v=breakpt,col='red')
breakpt
max(dat12$time1)
alpha=0.01
#useful stuff
max.time=max(dat12$time1)
max.Vp=max(dat12$Vp, na.rm = T)
max.Vt=max(dat12$Vt, na.rm = T)
#starting values
breakpt=mean(dat12$time1)
#number of iterations
ngibbs=10000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
202/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat12$Vp); abline(v=breakpt,col='red')
plot(dat12$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
alpha=0.01
max.time=max(dat19$time1)
max.Vp=max(dat19$Vp, na.rm = T)
max.Vt=max(dat19$Vt, na.rm = T)
breakpt=mean(dat19$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat19,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
114/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat19$Vp); abline(v=breakpt,col='red')
plot(dat19$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
alpha=0.01
max.time=max(dat27$time1)
max.Vp=max(dat27$Vp, na.rm = T)
max.Vt=max(dat27$Vt, na.rm = T)
breakpt=mean(dat27$time1)
ngibbs=10000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(2,1))
plot(dat27$Vp); abline(v=breakpt,col='red')
plot(dat27$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
alpha=0.01
#useful stuff
max.time=max(dat1$time1)
max.Vp=max(dat1$Vp, na.rm = T)
max.Vt=max(dat1$Vt, na.rm = T)
#starting values
breakpt=mean(dat1$time1)
#number of iterations
ngibbs=20000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat1,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
623/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat1$Vp); abline(v=breakpt,col='red')
plot(dat1$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 1")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 1")
alpha=0.01
#useful stuff
max.time=max(dat12$time1)
max.Vp=max(dat12$Vp, na.rm = T)
max.Vt=max(dat12$Vt, na.rm = T)
#starting values
breakpt=mean(dat12$time1)
#number of iterations
ngibbs=20000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat12,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
392/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat12$Vp); abline(v=breakpt,col='red')
plot(dat12$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 12")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 12")
alpha=0.01
#useful stuff
max.time=max(dat19$time1)
max.Vp=max(dat19$Vp, na.rm = T)
max.Vt=max(dat19$Vt, na.rm = T)
#starting values
breakpt=mean(dat19$time1)
ngibbs=20000
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat19,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
228/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat19$Vp); abline(v=breakpt,col='red')
plot(dat19$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 19")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 19")
alpha=0.01
#useful stuff
max.time=max(dat27$time1)
max.Vp=max(dat27$Vp, na.rm = T)
max.Vt=max(dat27$Vt, na.rm = T)
#starting values
breakpt=mean(dat27$time1)
#number of iterations
ngibbs=20000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
length(breakpt)
par(mfrow=c(2,1))
plot(dat27$Vp); abline(v=breakpt,col='red')
plot(dat27$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
breakpt=mean(dat27$time1)
#number of iterations
ngibbs=40000
#matrix to store results
store.param=matrix(NA,ngibbs,2)
system.time(for (i in 1:ngibbs){
print(i)
vals=samp.move(breakpt=breakpt,max.time=max.time,dat=dat27,
alpha=alpha,max.Vp=max.Vp,max.Vt=max.Vt)
breakpt=vals[[1]]
#store results
store.param[i,]=c(length(vals[[1]]), vals[[2]])
})
208/60
length(breakpt)
par(mfrow=c(2,1))
plot(dat27$Vp); abline(v=breakpt,col='red')
plot(dat27$Vt); abline(v=breakpt,col='red')
store.param.mcmc<- as.mcmc(store.param)
par(mfrow=c(1,1))
traceplot(store.param.mcmc[,1]); title(y="# of Breakpoints", main = "ID 27")
traceplot(store.param.mcmc[,2]); title(y="Log Marginal Likelihood", main = "ID 27")
